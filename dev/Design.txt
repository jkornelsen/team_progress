---- issues and proposed changes ----

win condition quantity min and max, like attribs for recipes
Fission Plant: no more than a certain amount of pollution

shouldn't be able to have both a two-way dest and an arrival one-way dest

scenario: Furniture
People: old man, young husband, young wife, elementary schooler, baby, dog, cat

sometimes for overview there's a problem re-inserting recipe data
in this case, we were coming from viewing black bar
maybe the old data failed to cascade delete before inserting?
reloading overview fixes the problem
    overview_data = Overall.data_for_overview()
    batches_done = progress.batches_for_elapsed_time()
    if not self.change_quantity(batches_to_do):
    self.pholder.to_db()  # should include writing progress obj to db
    recipe.to_db()
    psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint "recipe_sources_pkey"
    Key (game_token, recipe_id, item_id)=(..., 36, 45 [Green Bar Unlocked]) already exists.
    for source in self.sources:
        values.append((
            g.game_token, self.id,
            source.item_id,
            source.q_required,
            source.preserve,
            ))
    self.insert_multiple(
        "recipe_sources",
        "game_token, recipe_id, item_id, q_required, preserve",
        values)
Another example is coming from play Star to overview.
    Key (game_token, recipe_id, item_id)=(..., 3, 16 [Ambient Energy]) already exists.
    Key (game_token, recipe_id, item_id)=(..., 57, 54 [Life Force]) already exists.
    source of source maybe

limit upload file size to 20 Mb

---- planning ----

hosting possibilities:
Pythonanywhere should be able to host postgres and flask web app.
https://www.reddit.com/r/flask/comments/12beskr/free_hosting_sites_compatible_with_flask/
render.com is an alternative.

try selenium to test client side

consider sharing community scenarios
perhaps submit to reddit, or github via enhancement requests

---- doesn't seem important currently ----

prompt each player to save to their PC occasionally
only if no one recently saved from that session
warn that loading will erase any scenario currently being played, so save first

disconnect after 30 minutes without user interaction
reloading overview doesn't count
disconnect means go to a static page so it doesn't keep requesting updates
session['disconnected'] = True
button on page to reconnect

prompt before overwriting another action in progress
such as if a character is already doing something else

if item play gets too cluttered we could make a recipe play screen
it wouldn't have the upper button actions such as pickup
that would be the only place where progress would be shown
some events could be related to production, including all
automatically triggered ones,
while 'shoot' would make more sense on item play instead

if an item cannot be produced,
reload play item every 10 seconds until it can be?
although that might not be why we're viewing the page,
and if not, it could be annoying

will it be difficult if several elapsed-time actions depend on each other?
pen requires lid requires plastic, and each is incremented regularly
when querying an item, first recursively query
all of its sources that are in progress
avoid recursion loops by maintaining a set of items to query
the set would need to be a local variable passed as a parameter
the player could control this by playing the source item first
although that wouldn't be obvious at all
going to overview would also take away that choice for top-level items
